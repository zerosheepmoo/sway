{"version":3,"sources":["components/DateViewerTools.js","components/DateViewer.js","components/NothingCon.js","components/People.js","components/PeopleSingleSelect.js","components/Todos.js","components/Notice.js","components/MiddleNav.js","components/RangeCal.js","components/WageCal.js","components/ComplexCals.js","components/PeopleMultiSelect.js","components/RecordWork.js","components/Employees.js","components/AccountBook.js","components/Dashboard.js","components/ListItems.js","App.js","theme.js","index.js"],"names":["minDate","Date","maxDate","DateViewerTools","props","date","setDate","Box","style","display","justifyContent","Button","sx","flex","m","onClick","goLeft","Typography","variant","mode","goRight","MonthPicker","onChange","newDate","width","YearPicker","newD","isDateDisabled","toolModes","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","DateViewer","val","dispatch","useState","toolMode","setToolMode","orientation","ori","notTool","Stack","elevation","idx","indexOf","length","height","StaticDatePicker","toolbarTitle","toolbarFormat","openTo","value","renderInput","params","TextField","NothingCon","readonly","paddingLeft","marginTop","AddPerson","name","setName","age","setAge","submit","component","margin","autoComplete","id","label","e","target","required","type","preventDefault","handleSubmit","createColumns","field","headerName","PeopleTable","rows","columns","checkboxSelection","onSelectionModelChange","sModel","setSelected","People","people","data","workRecord","setPeople","selectedDay","getFullYear","getMonth","getDate","selected","caltwh","tws","twh","work","Number","undefined","useEffect","newWR","list","dispatchWorkRecord","p","flexDirection","overflow","position","backgroundColor","bgColor","hidden","align","alert","filter","person","push","Object","keys","map","personName","mt","role","i","splice","newRows","row","createNewRows","PeopleSingleSelect","setPerson","FormControl","fullWidth","InputLabel","Select","displayEmpty","labelId","emptyVal","MenuItem","pInfo","AddTodo","todoText","setTodoText","income","setIncome","outcome","setOutcome","noValidate","mr","multiline","maxRows","Todo","status","setStatus","todo","setValue","txt","split","lineCount","editModeTemplate","Input","defaultValue","prev","assignee","IconButton","edit","update","fontSize","readModeTemplate","t","xs","marginLeft","delete","Grid","item","alignItems","Todos","todos","setTodos","dispatchTodos","newTodos","editTodo","newVal","sTodos","deleteTodo","key","maxHeight","el","Notice","paddingBottom","Link","href","src","title","MiddleNav","texts","handler","borderBottom","borderColor","Tabs","Tab","index","RangeCal","d","setHours","startDate","setStartDate","endDate","setEndDate","wage","setWage","container","md","paddingTop","hrs","console","log","pr","tD","calculate","lg","DatePicker","mask","allowSameDateSelection","newValue","helperText","inputProps","min","WageCal","extra","setExtra","hours","days","setDays","res","max","FormControlLabel","control","Checkbox","checked","types","ComplexCals","setCalType","navIdx","setNavIdx","PeopleSelect","ps","setPs","useTheme","MenuProps","PaperProps","ITEM_HEIGHT","getStyles","fontWeight","fontWeightRegular","fontWeightMedium","multiple","renderValue","flexWrap","gap","Chip","event","input","OutlinedInput","RecordWork","wHours","setWHours","setWork","peopleName","setPeopleName","mb","ml","formatted","newWRecord","newData","Employees","setMType","colors","AccountBook","ResponsiveContainer","PieChart","Tooltip","cursor","stroke","strokeWidth","Pie","cx","cy","innerRadius","outerRadius","fill","entry","Cell","Footer","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","primary","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","MainDashboard","peopleData","DashboardContent","setOpen","toggleDrawer","notifiCount","setNotifiCount","pageState","setPageState","saved","localStorage","getItem","JSON","parse","dataRel","upload","document","createElement","addEventListener","file","files","fr","FileReader","filecontent","result","parentElement","removeChild","readAsText","click","confirm","export","stringify","File","getTime","saveAs","peopleDataRel","window","setItem","CssBaseline","Toolbar","edge","marginRight","noWrap","flexGrow","Badge","badgeContent","px","Divider","List","ListItem","button","ListItemIcon","ListItemText","ListSubheader","inset","grey","Container","maxWidth","pt","App","React","locale","localeMap","ko","koLocale","LocalizationProvider","dateAdapter","AdapterDateFns","createTheme","main","error","red","A400","background","default","ReactDOM","render","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.90e64596.chunk.js","sourcesContent":["import React from 'react';\nimport MonthPicker from '@material-ui/lab/MonthPicker';\nimport YearPicker from '@material-ui/lab/YearPicker';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst minDate = new Date('2020-01-01T00:00:00.000');\nconst maxDate = new Date('2028-01-01T00:00:00.000');\n\nconst DateViewerTools = (props) => {\n\n    const date = props.date;\n    const setDate = props.setDate;\n\n    return (\n        <Box>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <Button sx={{ flex: 0.5, m: 1 }} onClick={props.goLeft}>\n                    <ChevronLeftIcon />\n                </Button>\n                <Typography variant=\"h5\" sx={{ m: 1, flex: 1 }}>{props.mode}</Typography>\n                <Button sx={{ flex: 0.5, m: 1 }} onClick={props.goRight}>\n                    <ChevronRightIcon />\n                </Button>\n            </div>\n            {\n                props.mode === '월 선택기'\n                    ? <MonthPicker\n                        date={date}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        onChange={(newDate) => setDate(newDate)}\n                        sx={{ width: '100%'}}\n                        />\n                        : props.mode === '연 선택기'\n                        ? <YearPicker\n                        date={date}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        onChange={(newD) => setDate(newD)}\n                        isDateDisabled={() => false}\n                        />\n                        : <Typography>화살표를 클릭하여 더 편한 달력 도구를 찾아보세요!</Typography>\n            }\n        </Box>\n    )\n}\n\nexport default DateViewerTools\n","import React, { useState } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Stack from '@material-ui/core/Stack';\nimport Box from '@material-ui/core/Box';\nimport StaticDatePicker from '@material-ui/lab/StaticDatePicker';\nimport DateViewerTools from './DateViewerTools';\n\nconst toolModes = ['반갑습니다', '월 선택기', '연 선택기'];\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst DateViewer = (props) => {\n\n    const date = props.date.val;\n    const setDate = props.date.dispatch;\n    const [toolMode, setToolMode] = useState(toolModes[0]);\n    const orientation = props.ori ?? 'portrait';\n    const notTool = props.notTool;\n\n    const goToolLeft = () => {\n        const idx = toolModes.indexOf(toolMode);\n        idx === 0 ? setToolMode(toolModes[toolModes.length - 1]) : setToolMode(toolModes[idx - 1]);\n    }\n\n    const goToolRight = () => {\n        const idx = toolModes.indexOf(toolMode);\n        idx === toolModes.length - 1 ? setToolMode(toolModes[0]) : setToolMode(toolModes[idx + 1]);\n    }\n\n    return (\n        <Stack sx={props.sx} spacing={3}>\n            {\n                !notTool && <Item elevation={3}>\n                    <DateViewerTools date={date} setDate={setDate} mode={toolMode} goLeft={goToolLeft} goRight={goToolRight} />\n                </Item>\n            }\n            <Item elevation={3} sx={{ height: notTool ? 'default' : '100%' }}>\n                <StaticDatePicker\n                    orientation={orientation}\n                    toolbarTitle=\"날짜를 선택하세요.\"\n                    toolbarFormat=\"yyyy-MM-dd\"\n                    openTo=\"day\"\n                    value={date}\n                    onChange={(newDate) => {\n                        setDate(newDate)\n                    }}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n            </Item>\n        </Stack>\n    );\n}\n\nexport default DateViewer\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\n\nconst NothingCon = (props) => {\n    return (\n        <Typography \n        variant={props.readonly ? \"h6\" : \"h3\"} \n        color='grey.500'\n        sx={{ paddingLeft: 2, marginTop: 5 }}>\n            없음...\n        </Typography>\n    )\n}\n\nexport default NothingCon\n","import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { DataGrid } from '@material-ui/data-grid';\nimport NothingCon from './NothingCon';\n\nconst AddPerson = (props) => {\n    const [name, setName] = useState('');\n    const [age, setAge] = useState('');\n    const submit = props.submit\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        submit(name, age);\n        setName('');\n        setAge(0);\n    }\n\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                margin: 2\n            }}\n            autoComplete=\"off\"\n        >\n            <TextField\n                sx={{ flex: '0.4' }}\n                id=\"employee-name\"\n                label=\"추가할 직원 명\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n            />\n            <TextField\n                sx={{ flex: '0.4' }}\n                id=\"employee-age\"\n                label=\"추가할 직원 나이\"\n                value={age}\n                type=\"number\"\n                onChange={(e) => setAge(e.target.value)}\n                required\n            />\n            <Button\n                sx={{ flex: '0.15' }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: \"10%\" }}\n                onClick={(e) => handleSubmit(e)}\n            >\n                직원 추가\n            </Button>\n        </Box>\n    )\n}\n\nconst createColumns = (date) => [\n    { field: 'id', headerName: 'ID', width: 110 },\n    { field: 'name', headerName: '이름', width: 130 },\n    {\n      field: 'age',\n      headerName: '나이',\n      type: 'number',\n      width: 150,\n    },\n    {\n      field: 'twh',\n      headerName: `${date} 일한 시간`,\n      type: 'number',\n      width: 250,\n    }\n]\n\nconst PeopleTable = (props) => {\n    return (<div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={props.rows} columns={props.columns} checkboxSelection onSelectionModelChange={sModel => {\n          props.setSelected(sModel);\n      }}/>\n    </div>)\n}\n\nconst People = (props) => {\n    const people = props.data.people;\n    const workRecord = props.data.workRecord;\n\n    const setPeople = props.data.setPeople\n    const date = props.data.date\n\n    const readonly = props.readonly\n    const selectedDay = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n\n    const [selected, setSelected] = useState([]);\n\n    const dispatchWorkRecord = () => {\n        const newWR = {...workRecord, [selectedDay]: {}};\n        setPeople({list: people, workRecord: newWR});\n    }\n\n    // 사람 추가\n    const addPerson = (name, age) => {\n        if (!name || age <= 0) {\n            alert('이름이 입력되지 않았거나 나이가 올바르지 않습니다!')\n            return;\n        }\n        const already = people.filter(person => person.name === name);\n        if (already.length !== 0) {\n            alert('똑같은 사람이 있습니다! 동명이인일 경우 (2)를 붙이는 등 다르게 표시해주세요');\n            return;\n        }\n        people.push({name: name, age: age});\n        setPeople({ list: people, workRecord: workRecord});\n    }\n\n    const deletePerson = (idx, name) => {\n        people.splice(idx, 1);\n        // for (let date in workRecord) {\n        //     const exists = workRecord[date][name];\n        //     if (exists) {\n        //         delete workRecord[date][name];\n        //     }\n        // }\n        setPeople({ list: people,  workRecord});\n    }\n\n    const caltwh = (name) => {\n        if (!workRecord[selectedDay] || !workRecord[selectedDay][name]) {\n            return;\n        }\n        const tws = workRecord[selectedDay][name];\n        let twh = 0;\n        for (let work in tws) {\n            twh += Number(tws[work]);\n        }\n        return twh || undefined;\n    }\n\n    const createNewRows = () => {\n        const newRows = []\n        for (let i = 0; i < people.length; i++) {\n            const name = people[i].name;\n            const age = Number(people[i].age);\n            const id = i;\n            const twh = caltwh(name);\n            const row = {id, name, age, twh}\n            newRows.push(row);\n        }\n        return newRows\n    }\n\n    useEffect(() => {\n        if (!workRecord[selectedDay]) {\n            dispatchWorkRecord()\n        }\n    }, [date])\n\n    return (\n        <Paper\n            elevation={3}\n            sx={readonly ? {\n                p: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                overflow: 'scroll',\n                position: 'relative',\n                marginTop: 3,\n                flex: '1',\n                backgroundColor: props.bgColor || undefined\n            } : { \n                height: '80vh', \n                padding: '20px', \n                overflow: 'scroll', \n                position: 'relative' \n                }}\n                hidden={props.hidden}\n            >\n            <Typography\n                variant={readonly ? \"h5\" : \"h2\"}\n                color=\"primary\"\n                align=\"center\"\n                >\n                {readonly ? selectedDay + ' 일한 직원' : '직원목록'}\n            </Typography>\n\n            {!readonly ? <AddPerson submit={addPerson} /> : <></>}\n            {!readonly \n                ? <>\n                <Button onClick={(e) => {\n                    for (let i = selected.length -1; i > -1; i--) {\n                        deletePerson(selected[i], people[i].name);\n                    }\n                }}>선택직원 삭제하기</Button>\n                <PeopleTable rows={createNewRows()} columns={createColumns(`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`)} setSelected={setSelected}/>\n            </>\n                : workRecord[selectedDay] && Object.keys(workRecord[selectedDay]).length > 0\n                ? Object.keys(workRecord[selectedDay]).map(personName => <Paper key={personName} sx={{p: 1, mt: 2, textAlign: 'center'}}>\n                    <Typography variant='h5' role=\"body1\">{personName}{': '}{caltwh(personName)}{'시간'}</Typography>\n                    </Paper>)\n                : <NothingCon readonly={readonly}/> }\n        </Paper >\n    )\n}\n\nexport default People\n","import React, { useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl'\n\nconst PeopleSingleSelect = (props) => {\n    const list = props.list;\n    const {person, setPerson} = props;\n    const label = props.label ?? '직원';\n\n    const handleChange = (e) => {\n        setPerson(e.target.value);\n    }\n\n    return (\n        <FormControl fullWidth>\n            <InputLabel id='pssl'>{label}</InputLabel>\n            <Select\n                displayEmpty\n                value={person}\n                onChange={handleChange}\n                label={label}\n                labelId=\"pssl\"\n                sx={props.sx}\n            >\n                {props.emptyVal && <MenuItem value={''} sx={{height: 35}}>  </MenuItem>}\n                {list.map((pInfo) => (\n                    <MenuItem\n                        key={pInfo.name}\n                        value={pInfo.name}\n                    >\n                        {pInfo.name}\n\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    )\n}\n\n\nexport default PeopleSingleSelect;","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Build from \"@material-ui/icons/Build\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Save from \"@material-ui/icons/Save\";\nimport Input from '@material-ui/core/Input';\nimport NothingCon from './NothingCon';\nimport PeopleSingleSelect from './PeopleSingleSelect';\n\n// add todo component\nconst AddTodo = (props) => {\n    const [todoText, setTodoText] = useState('');\n    const [income, setIncome] = useState('');\n    const [outcome, setOutcome] = useState('');\n    const submit = props.submit;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        submit(todoText, income, outcome, props.p.person);\n        setTodoText('');\n    }\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                margin: 2\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <TextField\n                sx={{ flex: '1.8', mr:1 }}\n                label=\"업무내용\"\n                multiline\n                maxRows={2}\n                value={todoText}\n                onChange={(e) => setTodoText(e.target.value)}\n            />\n            <TextField\n                sx={{ flex: '0.5', mr:1  }}\n                type=\"number\"\n                label=\"수입\"\n                value={income}\n                onChange={(e) => setIncome(e.target.value)}\n            />\n            <TextField\n                sx={{ flex: '0.5', mr:1  }}\n                type=\"number\"\n                label=\"지출\"\n                value={outcome}\n                onChange={(e) => setOutcome(e.target.value)}\n            />\n            <Box sx={{ flex: '0.5', mr:1  }} >\n            <PeopleSingleSelect list={props.p.list} person={props.p.person} setPerson={props.p.setPerson} label={'담당자'}emptyVal/>\n            </Box>\n            <Button\n                sx={{ flex: '0.15' }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: \"10%\" }}\n                onClick={(e) => handleSubmit(e)}\n            >\n                추가\n            </Button>\n        </Box>\n    )\n}\n\n// todo component\nconst Todo = (props) => {\n\n    const [status, setStatus] = useState('read');\n    const [value, setValue] = useState(() => props.todo);\n\n    useEffect(() => {\n        setValue(props.todo)\n    }, [props.todo])\n\n    const styles = {\n        Paper: {\n            padding: 3,\n            display: \"flex\",\n            alignItems: \"center\",\n            margin: 2\n        }\n    };\n\n    const readonly = props.readonly\n    const txt = props.todo.text.split('\\n');\n    let lineCount = 0;\n\n    const update = (e) => {\n        e.preventDefault();\n        if (value.text !== props.todo.text) {\n            props.edit(props.id, value)\n            setValue({});\n            setStatus('read');\n        }\n        setStatus('read');\n    }\n\n    const editModeTemplate = <Box component=\"form\"\n        sx={{\n            display: 'flex',\n            justifyContent: 'space-around',\n            margin: 2,\n            width: '100%'\n        }}\n        noValidate\n        autoComplete=\"off\">\n        <Input\n            sx={{ flex: '2' }}\n            defaultValue={value.text}\n            onChange={(e) => setValue((prev) => { return { ...prev, text: e.target.value } })}\n            multiline\n        />\n        <Input\n            sx={{ flex: '0.5' }}\n            type=\"number\"\n            defaultValue={value.income}\n            onChange={(e) => setValue((prev) => { return { ...prev, income: e.target.value } })}\n        />\n        <Input\n            sx={{ flex: '0.5' }}\n            type=\"number\"\n            defaultValue={value.outcome}\n            onChange={(e) => setValue((prev) => { return { ...prev, outcome: e.target.value } })}\n        />\n        <Input\n            sx={{ flex: '0.5' }}\n            defaultValue={value.assignee}\n            onChange={(e) => setValue((prev) => { return { ...prev, assignee: e.target.value } })}\n        />\n\n        <IconButton\n            type=\"submit\"\n            color=\"primary\"\n            aria-label=\"Save\"\n            onClick={(e) => update(e)}\n        >\n            <Save fontSize=\"small\" />\n        </IconButton>\n    </Box>\n\n    const readModeTemplate = <><Box sx={{ flex: '2' }}>\n        {txt.map(t => {\n            lineCount += 1;\n            return (<Typography key={lineCount} variant=\"body1\" xs={{ display: 'block' }}> {t} </Typography>)\n        })}\n    </Box>\n        <Box hidden={readonly} sx={{ flex: '.5' }}>\n            {value.income ? value.income + ' 원' : ''}\n        </Box>\n        <Box hidden={readonly} sx={{ flex: '.5' }}>\n            {value.outcome ? value.outcome + ' 원' : ''}\n        </Box>\n        <Box hidden={readonly} sx={{ flex: '.5' }}>\n            {value.assignee}\n        </Box>\n        {\n            !readonly ? <>\n                <IconButton\n                    color=\"primary\"\n                    aria-label=\"Edit\"\n                    sx={{ marginLeft: \"auto\" }}\n                    onClick={(e) => setStatus(e.target.value)}\n                >\n                    <Build fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                    color=\"secondary\"\n                    aria-label=\"Delete\"\n                    onClick={() => props.delete(props.id)}\n                >\n                    <Delete fontSize=\"small\" />\n                </IconButton>\n            </>\n                : <></>\n        }</>\n    return (\n        <Grid\n            xs={12}\n            item\n            sx={{ flex: '0.5' }}\n        >\n            <Paper elevation={2} sx={styles.Paper}>\n                {status === 'read'\n                    ? readModeTemplate\n                    : editModeTemplate\n                }\n            </Paper>\n        </Grid>\n    )\n}\n\nconst Todos = (props) => {\n\n    const todos = props.data.todos\n    const setTodos = props.data.setTodos\n    const date = props.data.date\n\n    const people = props.people;\n    const [person, setPerson] = useState('');\n\n    const readonly = props.readonly\n    const selectedDay = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n\n\n    const dispatchTodos = () => {\n        const newTodos = { ...todos, [selectedDay]: [] };\n        setTodos(newTodos);\n    }\n\n    const addTodo = (text, income, outcome, assignee) => {\n        const sTodos = todos[selectedDay];\n        const already = sTodos.filter(el => el.text === text);\n        if (already.length !== 0) {\n            alert('똑같은 내용의 기록이 있습니다!');\n            return;\n        }\n        sTodos.push({ text, income, outcome, assignee });\n        setTodos({ ...todos, [selectedDay]: sTodos });\n    }\n\n    const editTodo = (idx, newVal) => {\n        const sTodos = todos[selectedDay];\n        sTodos[idx] = newVal;\n        const newTodos = { ...todos, [selectedDay]: sTodos }\n        setTodos(newTodos);\n    }\n\n    const deleteTodo = (key) => {\n        const sTodos = todos[selectedDay];\n        sTodos.splice(key, 1);\n        setTodos({ ...todos, [selectedDay]: sTodos });\n    }\n\n    useEffect(() => {\n        if (!todos[selectedDay]) {\n            dispatchTodos()\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!todos[selectedDay]) {\n            dispatchTodos()\n        }\n    }, [date])\n\n\n    return (\n        <Paper\n            elevation={3}\n            sx={readonly ? {\n                p: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                overflow: 'scroll',\n                position: 'relative',\n                flex: '1',\n                maxHeight: 300\n            } : { height: '80vh', padding: '20px', overflow: 'scroll', position: 'relative' }}>\n            <Typography variant={readonly ? \"h5\" : \"h2\"} color=\"primary\" align=\"center\">\n                {selectedDay} 업무 기록\n            </Typography>\n\n            {!readonly ? <AddTodo submit={addTodo} p={{list: people, person: person, setPerson: setPerson}} /> : <></>}\n\n            {todos[selectedDay] && todos[selectedDay].length > 0\n                ? todos[selectedDay].map(todo => <Todo key={todos[selectedDay].indexOf(todo)} id={todos[selectedDay].indexOf(todo)} todo={todo} readonly={readonly} edit={editTodo} delete={deleteTodo} />)\n                : <NothingCon readonly={readonly} />}\n        </Paper >\n    )\n}\n\nexport default Todos\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst Notice = () =>\n(<Paper elevation={3} sx={{ padding: 5 }}>\n    \n    <Typography variant=\"h4\" role=\"h3\" color=\"primary\" sx={{ paddingBottom: 3 }}>엑셀파일로 변환하기</Typography>\n    <Typography variant=\"body1\" sx={{ paddingBottom: 2 }}>\n        <Link href=\"https://www.convertcsv.com/json-to-csv.htm\">\n            {'JSON 파일을 csv, excel 파일로 바꿔주는 사이트'}\n        </Link>\n    </Typography>\n    <Typography sx={{ paddingBottom: 2 }}>\n        를 이용하여 텍스트로 저장하기 한 파일을 엑셀처럼 만들 수 있습니다.\n    </Typography>\n    <Typography>\n        전체일지 삭제하기를 한 뒤 저장해야 결과물이 반영됩니다.\n    </Typography>\n    <Typography sx={{ paddingBottom: 4 }}>\n        전체일지 삭제하기 한 뒤 새로고침하면 실행했던 결과를 취소할 수 있습니다\n    </Typography>\n\n    <Typography variant=\"h4\" role=\"h3\" color=\"primary\" sx={{ paddingBottom: 3 }}>주의사항</Typography>\n    <Typography variant=\"body1\">\n        SWAY는 <Link href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\">localStorage</Link> 기술을 사용합니다. 보안에 민감한 정보들은 되도록 기입하지 않기를 권장합니다.\n    </Typography>\n    <Typography variant=\"body1\" sx={{ paddingBottom: 2 }}>\n        이 앱의 제작자는 이 앱을 사용해서 발생한 피해에 대해서 어떠한 책임도 지지 않습니다.\n    </Typography>\n\n    <Typography variant=\"h5\" color=\"primary\">favicon 출처</Typography>\n    <img src=\"/sway/android-icon-192x192.png\" width=\"100px;\" height=\"100px;\"/>\n    <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n</Paper>\n)\n\nexport default Notice\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nconst MiddleNav = (props) => {\n    const texts = props.texts;\n    const handler = props.handler\n    const idx = props.idx;\n\n    const a11yProps = (index) => {\n        return {\n            id: `tab-${index}`,\n            'aria-controls': `tab-panel-${index}`,\n        };\n    }\n\n    const handleChange = (e, newVal) => {\n        handler(newVal)\n    }\n\n    return (\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <Tabs value={idx} onChange={handleChange} aria-label=\"tabs\">\n            { texts.map(text => <Tab key={text} label={text} {...a11yProps(0)}/>)}\n            </Tabs>\n        </Box>\n\n    )\n}\n\nexport default MiddleNav\n","import React, { useState } from 'react';\nimport DatePicker from '@material-ui/lab/DatePicker';\nimport PeopleSelect from './PeopleSingleSelect';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst RangeCal = (props) => {\n\n    const [startDate, setStartDate] = useState(() => {\n        const d = new Date();\n        d.setHours(0, 0, 0, 0);\n        return d;\n    });\n    const [endDate, setEndDate] = useState(() => {\n        const d = new Date();\n        d.setHours(23, 59, 59, 999);\n        return d;\n    });\n    const [wage, setWage] = useState(8720);\n    const [person, setPerson] = useState('')\n    const list = props.list;\n    const workRecord = props.workRecord;\n\n    const calculate = () => {\n        let hrs = 0;\n        for (let date in workRecord) {\n            console.log('today is ' + date);\n\n            const pr = workRecord[date][person];\n            const tD = new Date(date);\n            if (tD >= startDate && tD <= endDate) {\n                console.log('The date is' + date);\n                console.log('The person is' + person);\n                console.log(pr);\n                console.log('여기는 성공!');\n                for (let work in pr) {\n                    hrs += Number(pr[work]);\n                }\n            }\n        }\n        return hrs * wage;\n    }\n\n    return (\n        <div hidden={props.hidden}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={12} >\n                    <Typography\n                        variant='h3'\n                        role='h2'\n                        color='primary'\n                        sx={{ marginLeft: 1, paddingTop: 6, paddingBottom: 4 }}\n                    >\n                        {calculate()} 원\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={3} lg={3}>\n                    <PeopleSelect list={list} person={person} setPerson={setPerson} sx={{ width: '100%' }} />\n                </Grid>\n                <Grid item xs={6} md={3} lg={3}>\n                    <DatePicker\n                        mask='____.__.__'\n                        label=\"시작 날짜\"\n                        value={startDate}\n                        allowSameDateSelection\n                        onChange={(newValue) => {\n                            if (newValue > endDate) {\n                                alert('불가능!');\n                                return;\n                            }\n                            setStartDate(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} sx={{ width: '100%' }} helperText={null} />}\n                    />\n                </Grid>\n                <Grid item xs={6} md={3} lg={3}>\n                    <DatePicker\n                        mask='____.__.__'\n                        label=\"끝 날짜\"\n                        value={endDate}\n                        allowSameDateSelection\n                        onChange={(newValue) => {\n                            if (newValue < startDate) {\n                                alert('불가능!');\n                                return;\n                            }\n                            setEndDate(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} sx={{ width: '100%' }} helperText={null} />}\n                    />\n                </Grid>\n                <Grid item xs={12} md={3} lg={3}>\n                    <TextField\n                        id=\"days\"\n                        type=\"number\"\n                        label=\"시급\"\n                        variant=\"outlined\"\n                        inputProps={{ min: 0 }}\n                        sx={{ width: '100%' }}\n                        value={wage}\n                        onChange={e => setWage(e.target.value)}\n                    />\n                </Grid>\n                \n            </Grid>\n        </div>\n    )\n}\n\nexport default RangeCal\n","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst WageCal = (props) => {\n    const [extra, setExtra] = useState(false)\n    const [wage, setWage] = useState(8720)\n    const [hours, setHours] = useState(0);\n    const [days, setDays] = useState(0);\n    const calculate = () => {\n        let res = wage * hours * days;\n        extra ? res += res / 5 : true;\n        return res\n    }\n    return (\n        <div hidden={props.hidden}>\n            <Typography variant='h3' role='body1' color='primary' sx={{ marginLeft: 1, paddingTop: 6, paddingBottom: 4 }}> {calculate()} 원</Typography>\n            <Typography variant='h6' color='secondary' sx={{ marginLeft: 1 }}>* 2021년 기준 최저시급 8720원</Typography>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                    marginTop: 6,\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n                <TextField\n                    id=\"wage\"\n                    type=\"number\"\n                    label=\"시간 당 임금\"\n                    variant=\"outlined\"\n                    inputProps={{ min: 0 }}\n                    value={wage}\n                    onChange={e => setWage(e.target.value)}\n                />\n                <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }}>\n                    <HighlightOffIcon />\n                </div>\n                <TextField\n                    id=\"hours\"\n                    type=\"number\"\n                    label=\"시간\"\n                    variant=\"outlined\"\n                    inputProps={{ min: 0, max: 24}}\n                    value={hours}\n                    onChange={e => setHours(e.target.value)}\n                />\n                <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }}>\n                    <HighlightOffIcon />\n                </div>\n                <TextField\n                    id=\"days\"\n                    type=\"number\"\n                    label=\"일 수\"\n                    variant=\"outlined\"\n                    inputProps={{min: 0}}\n                    value={days}\n                    onChange={e => setDays(e.target.value)}\n                    />\n                <FormControlLabel control={<Checkbox checked={extra} onClick={() => setExtra(!extra)} />} label=\"주휴수당 포함\" />\n            </Box>\n        </div>\n    )\n}\n\nexport default WageCal\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport MiddleNav from './MiddleNav';\nimport RangeCal from './RangeCal';\nimport WageCal from './WageCal';\n\nconst types = ['범위계산기', '간단계산기'];\n\nconst ComplexCals = (props) => {\n\n    const [calType, setCalType] = useState(types[0]);\n    const [navIdx, setNavIdx] = useState(0);\n\n    const list = props.data.people;\n    const workRecord = props.data.workRecord;\n\n    const handleNav = (idx) => {\n        console.log('new Val is: ' + idx);\n        setNavIdx(idx);\n        setCalType(types[idx]);\n    }\n\n    return (\n        <Paper elevation={3} sx={{ height: '80vh', padding: 2, overflow: 'scroll' }}>\n            <MiddleNav idx={navIdx} texts={types} handler={handleNav} />\n            <RangeCal hidden={navIdx!== 0} list={list} workRecord={workRecord}/>\n            <WageCal hidden={navIdx !== 1} />\n        </Paper>\n    )\n}\n\nexport default ComplexCals\n","import React, {useState} from 'react';\nimport Select from '@material-ui/core/Select';\nimport { useTheme } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\n\nconst PeopleSelect = (props) => {\n\n    const list = props.list;\n    const {ps, setPs} = props;\n\n    const theme = useTheme();\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    function getStyles(name, personName, theme) {\n        return {\n            fontWeight:\n                personName.indexOf(name) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    }\n\n    const handleChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setPs(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n    };\n\n    return (\n        <Select\n            multiple\n            displayEmpty\n            renderValue={(selected) => {\n                if (selected.length === 0) {\n                    return <em>직원 선택</em>;\n                }\n\n                return <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {selected.map((value) => (\n                        <Chip key={value} label={value} />\n                    ))}\n                </Box>\n            }}\n            value={ps}\n            onChange={handleChange}\n            input={<OutlinedInput />}\n            MenuProps={MenuProps}\n            sx={props.sx}\n        >\n            {list.map((pInfo) => (\n                <MenuItem\n                    key={pInfo.name}\n                    value={pInfo.name}\n                    xs={getStyles(pInfo.name, ps, theme)}\n                >\n                    {pInfo.name}\n                    \n                </MenuItem>\n            ))}\n        </Select>\n    )\n}\n\nexport default PeopleSelect\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport PeopleSelect from './PeopleMultiSelect';\nimport DateViewer from './DateViewer';\nimport Grid from '@material-ui/core/Grid';\nimport People from './People';\n\n\nconst RecordWork = (props) => {\n    const list = props.data.people;\n    const workRecord = props.data.workRecord;\n    const setPeople = props.data.setPeople;\n    const date = props.data.date;\n    const setDate = props.data.setDate;\n\n    const [wHours, setWHours] = useState(0);\n    const [work, setWork] = useState('기본 업무');\n    const [peopleName, setPeopleName] = useState([]);;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formatted = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n        const newWRecord = {};\n\n        if (workRecord[formatted]) {\n            newWRecord[formatted] = workRecord[formatted];\n        }\n        else {\n            newWRecord[formatted] = {};\n        }\n        for (let i = 0; i < peopleName.length; i++) {\n            if (newWRecord[formatted][peopleName[i]]) {\n                newWRecord[formatted][peopleName[i]][work] = wHours;\n            }\n            else {\n                newWRecord[formatted][peopleName[i]] = {[work]: wHours};\n            }\n        }\n        const newData = {\n            list: list, workRecord: {...workRecord, ...newWRecord}\n        }\n        \n        setPeople(newData);\n    }\n\n    return (\n        <Paper sx={{\n            height: '80vh',\n            padding: '20px',\n            overflow: 'scroll'\n        }} \n        hidden={props.hidden}\n        elevation={3}\n        >\n            <Grid container sx={{ mb: 4, overflow: 'scroll' }}>\n                <Grid item xs={12} md={6} lg={6} sx={{ mb: 3}}>\n                    <DateViewer date={{ val: date, dispatch: setDate }} notTool sx={{ mr: 2, ml: 2.5 }} />\n                </Grid>\n\n                <Grid item xs={12} md={6} lg={6} >\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'space-around',\n                            width: '100%',\n                            flexDirection: 'column',\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        \n                        <PeopleSelect list={list} ps={peopleName} setPs={setPeopleName} sx={{ mb: 1.5, ml: 1.5, mr: 1.5 }} />\n\n                        <TextField label=\"업무\" required value={work} onChange={(e) => setWork(e.target.value)} sx={{m: 1.5 }} />\n\n                        <TextField type=\"number\" required value={wHours} onChange={(e) => setWHours(e.target.value)} inputProps={{ min: 0, max: 24 }} label=\"시간\" sx={{m: 1.5 }} />\n\n                        <Button\n                            sx={{m: 1.5 }}\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={(e) => handleSubmit(e)}\n                        >\n                            기록\n                        </Button>\n                        <Box sx={{maxHeight: 180, overflow: 'scroll'}}>\n                            <People data={props.data} readonly bgColor='grey.300'/>\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default RecordWork\n","\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport MiddleNav from './MiddleNav';\nimport People from './People';\nimport RecordWork from './RecordWork';\n\nconst types = ['직원목록', '일한 시간 기록'];\n\nconst Employees = (props) => {\n    const [mType, setMType] = useState(types[0]);\n    const [navIdx, setNavIdx] = useState(0);\n\n    const data = props.data;\n    const handleNav = (idx) => {\n        setNavIdx(idx);\n        setMType(types[idx]);\n    }\n\n    return (\n        <Paper elevation={3} sx={{ height: '80vh', p:2, overflow: 'scroll' }}>\n            <MiddleNav idx={navIdx} texts={types} handler={handleNav} />\n            <People hidden={navIdx!== 0} data={data} readonly={false}/>\n            <RecordWork hidden={navIdx !== 1} data={data} readonly={false}/>\n        </Paper>\n    )\n}\n\nexport default Employees\n\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { PieChart, Pie, ResponsiveContainer, Cell, Tooltip } from 'recharts';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst createColumns = () => [\n    { field: 'id', headerName: 'ID', width: 110 },\n    { field: 'category', headerName: '카테고리', width: 130 },\n    {\n        field: 'income',\n        headerName: '수입',\n        type: 'number',\n        width: 150,\n    },\n    {\n        field: 'outcome',\n        headerName: '지출',\n        type: 'number',\n        width: 150,\n    }\n]\n\nconst colors = [\n    '#003f5c',\n    '#374c80',\n    '#7a5195',\n    '#bc5090',\n    '#ef5675',\n    '#ff764a',\n    '#ffa600'\n]\n\nconst data = [\n    {\n        \"name\": \"Group A\",\n        \"value\": 2400\n    },\n    {\n        \"name\": \"Group B\",\n        \"value\": 4567\n    },\n    {\n        \"name\": \"Group C\",\n        \"value\": 1398\n    },\n    {\n        \"name\": \"Group D\",\n        \"value\": 9800\n    },\n    {\n        \"name\": \"Group E\",\n        \"value\": 3908\n    },\n    {\n        \"name\": \"Group F\",\n        \"value\": 4800\n    }\n];\n\nconst AccountBook = () => {\n    return (\n        <Paper>\n            <Typography\n                variant='h2'\n                role='h2'\n                color='primary'\n                sx={{ m: 2, p: 2, textAlign: 'center' }}\n            >\n                가계장부\n            </Typography>\n            <Grid container>\n                <Grid item xs={12} md={6}>\n                    <ResponsiveContainer height={250}>\n                        <PieChart >\n                            <Tooltip cursor={{ stroke: 'red', strokeWidth: 2 }} />\n\n                            <Pie \n                            data={data}\n                            cx=\"50%\" \n                            cy=\"50%\" \n                            innerRadius={0} \n                            outerRadius={80} \n                            fill=\"#82ca9d\"\n                            label \n                            >\n                                {\n                                    data.map((entry, index) => (\n                                        <Cell key={`cell-${index}`} fill={colors[index]} />\n                                    ))\n                                }\n                            </Pie>\n                        </PieChart>\n                    </ResponsiveContainer>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default AccountBook\n","import React, {useEffect, useState} from 'react';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiDrawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport DateViewer from './DateViewer';\nimport { secondaryListItems, mainListItems } from './ListItems';\nimport People from './People';\nimport Todos from './Todos';\nimport Notice from './Notice';\nimport { saveAs } from 'file-saver'\nimport ComplexCals from './ComplexCals';\nimport Employees from './Employees';\nimport AccountBook from './AccountBook';\n\nfunction Footer(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Simple Workbook Application for You, Last updated: 2021-09-05'}\n        </Typography>\n    );\n}\n\nconst drawerWidth = 240;\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n    backgroundColor: theme.primary\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        '& .MuiDrawer-paper': {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            boxSizing: 'border-box',\n            ...(!open && {\n                overflowX: 'hidden',\n                transition: theme.transitions.create('width', {\n                    easing: theme.transitions.easing.sharp,\n                    duration: theme.transitions.duration.leavingScreen,\n                }),\n                width: theme.spacing(7),\n                [theme.breakpoints.up('sm')]: {\n                    width: theme.spacing(9),\n                },\n            }),\n        },\n    }),\n);\n\nconst MainDashboard = (date, setDate, data, peopleData) => (\n\n    <Grid container spacing={3}>\n        {/* DatePicker */}\n        <Grid \n        item container \n        flexDirection='column'\n        xs={12} md={6} lg={6} \n        >\n            <DateViewer date={{ val: date, dispatch: setDate }} sx={{ height: '100%' }} />\n        </Grid>\n\n        {/* Todos */}\n        <Grid \n            item container \n            flexDirection='column' \n            justifyContent='space-between'\n            xs={12} md={6} lg={6} >\n            <Todos data={data} readonly={true} />\n            <People data={peopleData} readonly={true}/>\n        </Grid>\n    </Grid>)\n\nconst DashboardContent = () => {\n    const [open, setOpen] = useState(true);\n    const toggleDrawer = () => {\n        setOpen(!open);\n    };\n    const [date, setDate] = useState(new Date())\n    const [notifiCount, setNotifiCount] = useState(1)\n    const [pageState, setPageState] = useState('dashboard')\n    const [todos, setTodos] = useState(() => {\n        const saved = localStorage.getItem(\"swayTodos\");\n        const initialValue = JSON.parse(saved);\n        return initialValue || {};\n    });\n    const [people, setPeople] = useState(() => {\n        const saved = localStorage.getItem(\"swayPeople\");\n        const initialValue = JSON.parse(saved);\n        return initialValue || {list: [], workRecord: {}};\n    });\n\n\n    const saveData = () => {\n        window.localStorage.setItem(\"swayTodos\", JSON.stringify(todos));\n    };\n\n    const loadData = () => {\n        const input = document.createElement('input');\n        const handleFiles = () => {\n            const file = input.files[0]; /* now you can work with the file list */\n            console.log(file)\n            const fr = new FileReader();\n            fr.addEventListener(\"load\", e => {\n                const filecontent = JSON.parse(fr.result);\n                setTodos(filecontent)\n                input.parentElement?.removeChild(input);\n            });\n            fr.readAsText(file);\n        }\n        input.type = 'file'\n        input.addEventListener(\"change\", handleFiles, false);\n        input.click()\n    };\n\n    const deleteData = () => {\n        if (confirm(\"정말로 삭제하시겠습니까? 삭제된 데이터는 더 이상 복구할 수 없습니다.\")) {\n            setTodos({});\n        }\n    }\n\n    const exportData = () => {\n        const data = JSON.stringify(todos)\n        console.log(data)\n        const file = new File([data], `sway-todos-${new Date().getTime()}.json`);\n        saveAs(file);\n    }\n\n    const savePeopleData = () => {\n        window.localStorage.setItem(\"swayPeople\", JSON.stringify(people));\n    }\n\n    const exportPeopleData = () => {\n        const data = JSON.stringify(people)\n        console.log(data)\n        const file = new File([data], `sway-people-${new Date().getTime()}.json`);\n        saveAs(file);\n    }\n\n    const loadPeopleData = () => {\n        const input = document.createElement('input');\n        const handleFiles = () => {\n            const file = input.files[0]; /* now you can work with the file list */\n            console.log(file)\n            const fr = new FileReader();\n            fr.addEventListener(\"load\", e => {\n                const filecontent = JSON.parse(fr.result);\n                setPeople(filecontent)\n                input.parentElement?.removeChild(input);\n            });\n            fr.readAsText(file);\n        }\n        input.type = 'file'\n        input.addEventListener(\"change\", handleFiles, false);\n        input.click()\n    };\n\n    const dataRel = {\n        todos,\n        setTodos: setTodos,\n        upload: loadData,\n        delete: deleteData,\n        export: exportData,\n        date,\n        setDate\n    }\n\n    const peopleDataRel = {\n        people: people.list,\n        workRecord: people.workRecord,\n        setPeople,\n        date,\n        setDate,\n        export: exportPeopleData,\n        upload: loadPeopleData\n    }\n\n    useEffect(() => {\n        saveData()\n    }, [todos])\n\n    useEffect(() => {\n        savePeopleData()\n    }, [people])\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n\n            <AppBar position=\"absolute\" open={open}>\n                <Toolbar\n                    sx={{\n                        pr: '24px', \n                    }}\n                >\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={toggleDrawer}\n                        sx={{\n                            marginRight: '36px',\n                            ...(open && { display: 'none' }),\n                        }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        noWrap\n                        sx={{ flexGrow: 1 }}\n                    >\n                        당신을 위한 미니멀 워크북 앱, SWAY\n                    </Typography>\n                    <IconButton color=\"inherit\" onClick={() => { alert('장식입니다!'); setNotifiCount(0) }}>\n                        <Badge badgeContent={notifiCount} color=\"secondary\" >\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n\n            <Drawer variant=\"permanent\" open={open}>\n                <Toolbar\n                    sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end',\n                        px: [1],\n                    }}\n                >\n                    <IconButton onClick={toggleDrawer}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </Toolbar>\n                <Divider />\n                <List> {mainListItems(setPageState)}</List>\n                <Divider />\n                <List> {secondaryListItems(dataRel, peopleDataRel)}</List>\n            </Drawer>\n\n            <Box\n                component=\"main\"\n                sx={{\n                    backgroundColor: (theme) =>\n                        theme.palette.mode === 'light'\n                            ? theme.palette.grey[100]\n                            : theme.palette.grey[900],\n                    flexGrow: 1,\n                    height: '100vh',\n                    overflow: 'auto',\n                }}\n            >\n                <Toolbar />\n                <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                    {pageState === 'dashboard' ? MainDashboard(date, setDate, dataRel, peopleDataRel) \n                    : pageState === 'people' ? <Employees data={peopleDataRel}/>\n                    : pageState === 'calculator' ? <ComplexCals data={peopleDataRel}/>\n                    : pageState === 'todos' ? <Todos data={dataRel} people={people.list} readonly={false} /> \n                    : pageState === 'notice' ? <Notice /> \n                    : pageState === 'acc' ? <AccountBook/>\n                    :'Nothing ever happens'}\n                    <Footer sx={{ pt: 4 }} />\n                </Container>\n            </Box>\n        </Box>\n    );\n}\n\nexport default DashboardContent","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport CalculateIcon from '@material-ui/icons/Calculate';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';;\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\nimport Assignment from '@material-ui/icons/Assignment';\nimport Delete from '@material-ui/icons/Delete';\nimport UploadFile from '@material-ui/icons/UploadFile';\n\nexport const mainListItems = (dispatch) => (\n  <div>\n    <ListItem button onClick={() => {dispatch('dashboard')}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"대시보드\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('people')}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"직원관리\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('acc')}>\n      <ListItemIcon>\n        <AccountBalanceWalletIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"장부\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('calculator')}>\n      <ListItemIcon>\n        <CalculateIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"임금계산기\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('todos')}>\n      <ListItemIcon>\n        <AssignmentInd />\n      </ListItemIcon>\n      <ListItemText primary=\"업무일지\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('notice')}>\n      <ListItemIcon>\n        <Assignment/>\n      </ListItemIcon>\n      <ListItemText primary=\"안내\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (data, peopleData) => (\n  <div>\n    <ListSubheader inset>자동 저장은 위험합니다!</ListSubheader>\n\n    <ListItem button onClick={() => data.delete()}>\n      <ListItemIcon>\n        <Delete />\n      </ListItemIcon>\n      <ListItemText primary=\"전체일지 삭제하기\" sx={{color: '#ff1744'}}/>\n    </ListItem>\n\n    <ListItem button onClick={() => data.upload()}>\n      <ListItemIcon>\n        <UploadFile />\n      </ListItemIcon>\n      <ListItemText primary=\"업무일지 파일 불러오기\"/>\n    </ListItem>\n\n    <ListItem button onClick={() => data.export()}>\n      <ListItemIcon>\n        <SaveAltIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"업무일지 파일 저장하기\"/>\n    </ListItem>\n\n    <ListItem button onClick={() => peopleData.upload()}>\n      <ListItemIcon>\n        <UploadFile />\n      </ListItemIcon>\n      <ListItemText primary=\"직원기록 파일 불러오기\"/>\n    </ListItem>\n\n    <ListItem button onClick={() => peopleData.export()}>\n      <ListItemIcon>\n        <SaveAltIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"직원기록 파일 저장하기\"/>\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport Dashboard from './components/Dashboard';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport koLocale from 'date-fns/locale/ko';\n\nexport default function App() {\n  const [locale, setLocale] = React.useState('ko');\n\n\n  const localeMap = {\n    ko: koLocale\n  }\n\n  return (\n    <div>\n\n      <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\n        <Dashboard />\n      </LocalizationProvider>\n    </div>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#66023C',\n    },\n    secondary: {\n      main: '#DFAFDF',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}