{"version":3,"sources":["components/DateViewer.js","components/People.js","components/Calculator.js","components/Todos.js","components/Notice.js","components/RecordWork.js","components/Dashboard.js","components/ListItems.js","App.js","theme.js","index.js"],"names":["localeMap","ko","koLocale","minDate","Date","maxDate","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","DateViewer","props","React","useState","locale","date","val","setDate","dispatch","LocalizationProvider","dateAdapter","AdapterDateFns","Box","Stack","elevation","StaticDatePicker","orientation","toolbarTitle","toolbarFormat","openTo","value","onChange","newDate","renderInput","params","TextField","MonthPicker","sx","width","YearPicker","styles","isDateDisabled","AddPerson","name","setName","age","setAge","submit","component","display","justifyContent","margin","autoComplete","flex","id","label","e","target","required","type","Button","variant","style","onClick","preventDefault","handleSubmit","columns","field","headerName","PeopleTable","height","rows","checkboxSelection","onSelectionModelChange","sModel","setSelected","People","people","data","workRecord","setPeople","readonly","selectedDay","getFullYear","getMonth","getDate","selected","deletePerson","idx","splice","list","useEffect","newWR","dispatchWorkRecord","p","flexDirection","overflow","position","marginTop","Typography","align","alert","filter","person","length","push","NaN","Object","keys","maps","personName","paddingLeft","i","newRows","row","Number","twh","createNewRows","Calculator","extra","setExtra","wage","setWage","hours","setHours","days","setDays","m","noValidate","FormControlLabel","control","Checkbox","checked","res","calculate","AddTodo","todoText","setTodoText","multiline","maxRows","Todo","status","setStatus","todo","setValue","split","editModeTemplate","Input","defaultValue","IconButton","edit","update","fontSize","readModeTemplate","map","t","xs","marginLeft","delete","Grid","item","alignItems","Todos","todos","setTodos","dispatchTodos","newTodos","editTodo","newVal","sTodos","deleteTodo","key","el","indexOf","Notice","Link","href","RecordWork","setPersonName","useTheme","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","fontWeight","fontWeightRegular","fontWeightMedium","Select","multiple","event","input","OutlinedInput","pInfo","MenuItem","Footer","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","backgroundColor","primary","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","MainDashboard","peopleData","container","md","lg","DashboardContent","setOpen","toggleDrawer","notifiCount","setNotifiCount","pageState","setPageState","saved","localStorage","getItem","JSON","parse","dataRel","upload","document","createElement","addEventListener","file","files","console","log","fr","FileReader","filecontent","result","parentElement","removeChild","readAsText","click","export","stringify","File","getTime","saveAs","peopleDataRel","window","setItem","CssBaseline","Toolbar","pr","edge","marginRight","noWrap","flexGrow","Badge","badgeContent","px","Divider","List","ListItem","button","ListItemIcon","ListItemText","ListSubheader","inset","mode","grey","Container","maxWidth","mt","mb","pt","App","createTheme","main","error","red","A400","background","default","ReactDOM","render","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.3cdc6d4d.chunk.js","sourcesContent":["import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n// import Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Stack from '@material-ui/core/Stack';\nimport Box from '@material-ui/core/Box';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport StaticDatePicker from '@material-ui/lab/StaticDatePicker';\nimport MonthPicker from '@material-ui/lab/MonthPicker';\nimport YearPicker from '@material-ui/lab/YearPicker';\n\nimport koLocale from 'date-fns/locale/ko';\n\nconst localeMap = {\n    ko: koLocale\n}\n\nconst minDate = new Date('2020-01-01T00:00:00.000');\nconst maxDate = new Date('2034-01-01T00:00:00.000');\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n}));\n\nconst DateViewer = (props) => {\n\n    // TODO multi lang\n    const [locale, setLocale] = React.useState('ko');\n    const date = props.date.val\n    const setDate = props.date.dispatch\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\n            <Box >\n                <Stack spacing={3}>\n                    <Item elevation={3}>\n                        <StaticDatePicker\n                            orientation=\"portrait\"\n                            toolbarTitle=\"날짜를 선택하세요.\"\n                            toolbarFormat=\"yyyy-MM-dd\"\n                            openTo=\"day\"\n                            value={date}\n                            onChange={(newDate) => {\n                                setDate(newDate)\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n\n                    </Item>\n                    <Item elevation={3}>\n                        <MonthPicker\n                            date={date}\n                            minDate={minDate}\n                            maxDate={maxDate}\n                            onChange={(newDate) => setDate(newDate)}\n                            sx={{ width: '100%' }}\n                        />\n                    </Item>\n                    <Item elevation={3}>\n                        <YearPicker styles={{ width: '100%' }}\n                            date={date}\n                            isDateDisabled={() => false}\n                            minDate={minDate}\n                            maxDate={maxDate}\n                            onChange={(newDate) => setDate(newDate)}\n                        />\n                    </Item>\n                </Stack>\n            </Box>\n        </LocalizationProvider>\n    );\n}\n\nexport default DateViewer\n","import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst AddPerson = (props) => {\n    const [name, setName] = useState('');\n    const [age, setAge] = useState('');\n    const submit = props.submit\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        submit(name, age);\n        setName('');\n        setAge(0);\n    }\n    \n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                margin: 2\n            }}\n            autoComplete=\"off\"\n        >\n            <TextField\n                sx={{ flex: '0.4' }}\n                id=\"employee-name\"\n                label=\"추가할 직원 명\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n            />\n            <TextField\n                sx={{ flex: '0.4' }}\n                id=\"employee-age\"\n                label=\"추가할 직원 나이\"\n                value={age}\n                type=\"number\"\n                onChange={(e) => setAge(e.target.value)}\n                required\n            />\n            <Button\n                sx={{ flex: '0.15' }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: \"10%\" }}\n                onClick={(e) => handleSubmit(e)}\n            >\n                직원 추가\n            </Button>\n        </Box>\n    )\n}\n\nconst columns = [\n    { field: 'id', headerName: 'ID', width: 110 },\n    { field: 'name', headerName: 'Name', width: 130 },\n    {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 150,\n    },\n    {\n      field: 'todaysWork',\n      headerName: 'Today Work Hours',\n      type: 'number',\n      width: 210,\n    }\n]\n\nconst PeopleTable = (props) => {\n    return (<div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={props.rows} columns={columns} checkboxSelection onSelectionModelChange={sModel => {\n          props.setSelected(sModel);\n      }}/>\n    </div>)\n}\n\nconst People = (props) => {\n    const people = props.data.people;\n    const workRecord = props.data.workRecord;\n\n    const setPeople = props.data.setPeople\n    const date = props.data.date\n\n    const readonly = props.readonly\n    const selectedDay = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n\n    const [selected, setSelected] = useState([]);\n\n    const dispatchWorkRecord = () => {\n        const newWR = {...workRecord, [selectedDay]: {}};\n        setPeople({list: people, workRecord: newWR});\n    }\n\n    // 사람 추가\n    const addPerson = (name, age) => {\n        if (!name || age <= 0) {\n            alert('이름이 입력되지 않았거나 나이가 올바르지 않습니다!')\n            return;\n        }\n        const already = people.filter(person => person.name === name);\n        if (already.length !== 0) {\n            alert('똑같은 사람이 있습니다! 동명이인일 경우 (2)를 붙이는 등 다르게 표시해주세요');\n            return;\n        }\n        people.push({name: name, age: age || NaN});\n        setPeople({ list: people, workRecord: workRecord});\n    }\n\n    // 사람 삭제\n    const deletePerson = (idx, name) => {\n        people.splice(idx, 1);\n        for (let date in workRecord) {\n            const exists = workRecord[date][name];\n            if (exists) {\n                delete workRecord[date];\n            }\n        }\n        setPeople({ list: people,  workRecord});\n    }\n\n    const createNewRows = () => {\n        const newRows = []\n        for (let i = 0; i < people.length; i++) {\n            const name = people[i].name;\n            const age = Number(people[i].age);\n            const id = i;\n            const twh = workRecord[selectedDay][name] ?? 0;\n            const row = {id, name, age, twh}\n            newRows.push(row);\n        }\n        return newRows\n    }\n\n    useEffect(() => {\n        if (!workRecord[selectedDay]) {\n            dispatchWorkRecord()\n        }\n    }, [date])\n\n\n    return (\n        <Paper\n            sx={readonly ? {\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                height: 400,\n                overflow: 'scroll',\n                position: 'relative',\n                marginTop: 3\n            } : { height: '80vh', padding: '20px', overflow: 'scroll', position: 'relative' }}>\n            <Typography variant={readonly ? \"h5\" : \"h2\"} color=\"primary\" align=\"center\">\n                {readonly ? selectedDay + ' 일한 직원' : '직원목록'}\n            </Typography>\n\n            {!readonly ? <AddPerson submit={addPerson} /> : <></>}\n            {!readonly ? <>\n            <Button onClick={(e) => {\n                for (let i = selected.length -1; i > -1; i--) {\n                    deletePerson(selected[i], people[i].name);\n                }\n            }}>선택직원 삭제하기</Button>\n            <PeopleTable rows={createNewRows()} setSelected={setSelected}/>\n            </>\n                : workRecord[selectedDay] && Object.keys(workRecord[selectedDay]).length > 0\n                ? Object.keys(workRecord[selectedDay]).maps(personName => <Paper><Typography variant='h3'>{personName}{': '}{workRecord[selectedDay][personName] ?? 0}</Typography></Paper>)\n                : <Typography variant={readonly ? \"h6\" : \"h3\"} sx={{ paddingLeft: 2, marginTop: 5 }}>없음</Typography>}\n        </Paper >\n    )\n}\n\nexport default People\n","import React, {useState} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\n\nconst Calculator = () => {\n    const [extra, setExtra] = useState(true)\n    const [wage, setWage] = useState(8720)\n    const [hours, setHours] = useState(\"\");\n    const [days, setDays] = useState(\"\");\n    const calculate = () => {\n        let res = wage * hours * days;\n        extra ? res += res/5 : true;\n        return res\n    }\n    return (\n        <Paper sx={{ height: '80vh', padding: '20px', overflow: 'scroll'}}>\n            <Typography variant='h2'color='primary'>임금계산기</Typography>\n            <Typography variant='h6'color='secondary'>* 2021년 기준 최저시급 8720원</Typography>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                    marginTop: 4\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n                <TextField id=\"wage\" label=\"시간 당 임금\" variant=\"outlined\" value={wage} onChange={e => setWage(e.target.value)}/>\n                <TextField id=\"hours\" label=\"시간\" variant=\"outlined\" value={hours} onChange={e => setHours(e.target.value)}/>\n                <TextField id=\"dayS\" label=\"일 수\" variant=\"outlined\" value={days} onChange={e => setDays(e.target.value)}/>\n                <FormControlLabel control={<Checkbox checked={extra} onClick={() => setExtra(!extra)}/>} label=\"주휴수당 포함\" />\n            </Box>\n\n            <Typography variant='h2' sx={{marginTop: 3}}>{calculate()} 원</Typography>\n        </Paper>\n    )\n}\n\nexport default Calculator\n","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Build from \"@material-ui/icons/Build\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Save from \"@material-ui/icons/Save\";\nimport Input from '@material-ui/core/Input';\n\n// add todo component\nconst AddTodo = (props) => {\n    const [todoText, setTodoText] = useState('')\n    const submit = props.submit\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        submit(todoText);\n        setTodoText('');\n    }\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                display: 'flex',\n                justifyContent: 'space-around',\n                margin: 2\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <TextField\n                sx={{ flex: '0.8' }}\n                id=\"outlined-multiline-flexible\"\n                label=\"Multiline\"\n                multiline\n                maxRows={4}\n                value={todoText}\n                onChange={(e) => setTodoText(e.target.value)}\n            />\n            <Button\n                sx={{ flex: '0.15' }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: \"10%\" }}\n                onClick={(e) => handleSubmit(e)}\n            >\n                Add\n            </Button>\n        </Box>\n    )\n}\n\n// todo component\nconst Todo = (props) => {\n\n    const [status, setStatus] = useState('read');\n    const [value, setValue] = useState(() => props.todo)\n    const prevVal = props.todo\n\n    useEffect(() => {\n        setValue(props.todo)\n    }, [props.todo])\n\n    const styles = {\n        Paper: {\n            padding: 3,\n            display: \"flex\",\n            alignItems: \"center\",\n            margin: 2\n        }\n    };\n\n    const readonly = props.readonly\n    const todo = props.todo.split('\\n');\n\n    const update = (e) => {\n        e.preventDefault();\n        if (value !== props.todo) {\n            props.edit(props.id, value)\n            setValue('');\n            setStatus('read');\n        }\n        setStatus('read');\n    }\n\n    const editModeTemplate = <Box component=\"form\"\n        sx={{\n            display: 'flex',\n            justifyContent: 'space-around',\n            margin: 2,\n            width: '100%'\n        }}\n        noValidate\n        autoComplete=\"off\">\n        <Input\n            sx = {{ flex: '0.9'}}\n            defaultValue={value}\n            onChange={(e) => setValue(e.target.value)}\n            multiline\n        />\n        <IconButton\n            type=\"submit\"\n            color=\"primary\"\n            aria-label=\"Save\"\n            onClick={(e) => update(e)}\n        >\n            <Save fontSize=\"small\" />\n        </IconButton>\n    </Box>\n\n    const readModeTemplate = <><Box>\n        {todo.map(t => (<Typography key={t} variant=\"body1\" xs={{ display: 'block' }}> {t} </Typography>))}\n    </Box>\n    {\n        !readonly ? <>\n            <IconButton\n                color=\"primary\"\n                aria-label=\"Edit\"\n                sx={{ marginLeft: \"auto\" }}\n                onClick={(e) => setStatus(e.target.value)}\n            >\n                <Build fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n                color=\"secondary\"\n                aria-label=\"Delete\"\n                onClick={() => props.delete(props.id)}\n            >\n                <Delete fontSize=\"small\" />\n            </IconButton>\n        </>\n        : <></>\n    }</>\n        return (\n            <Grid\n                xs={12}\n                item\n            >\n                <Paper elevation={2} sx={styles.Paper}>\n                    {status === 'read' ?\n                        readModeTemplate\n                        :\n                        editModeTemplate\n                    }\n                </Paper>\n            </Grid>\n        )\n    }\n\n    const Todos = (props) => {\n\n        const todos = props.data.todos\n        const setTodos = props.data.setTodos\n        const date = props.data.date\n\n        const readonly = props.readonly\n        const selectedDay = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n\n\n        const dispatchTodos = () => {\n            const newTodos = { ...todos, [selectedDay]: [] };\n            setTodos(newTodos);\n        }\n\n        const addTodo = (val) => {\n            const sTodos = todos[selectedDay];\n            const already = sTodos.filter(el => el === val);\n            if (already.length !== 0) {\n                alert('똑같은 내용의 기록이 있습니다!');\n                return;\n            }\n            sTodos.push(val);\n            setTodos({ ...todos, [selectedDay]: sTodos });\n        }\n\n        const editTodo = (idx, newVal) => {\n            const sTodos = todos[selectedDay];\n            sTodos[idx] = newVal;\n            const newTodos = { ...todos, [selectedDay]: sTodos }\n            setTodos(newTodos);\n        }\n\n        const deleteTodo = (key) => {\n            const sTodos = todos[selectedDay];\n            sTodos.splice(key, 1);\n            setTodos({ ...todos, [selectedDay]: sTodos });\n        }\n\n        useEffect(() => {\n            if (!todos[selectedDay]) {\n                dispatchTodos()\n            }\n        }, [])\n\n        useEffect(() => {\n            if (!todos[selectedDay]) {\n                dispatchTodos()\n            }\n        }, [date])\n\n\n        return (\n            <Paper\n                sx={readonly ? {\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 300,\n                    overflow: 'scroll',\n                    position: 'relative'\n                } : { height: '80vh', padding: '20px', overflow: 'scroll', position: 'relative' }}>\n                <Typography variant={readonly ? \"h5\" : \"h2\"} color=\"primary\" align=\"center\">\n                    {selectedDay} 업무 기록\n                </Typography>\n\n                {!readonly ? <AddTodo submit={addTodo} /> : <></>}\n\n                {todos[selectedDay] && todos[selectedDay].length > 0 ? todos[selectedDay].map(todo => <Todo key={todos[selectedDay].indexOf(todo)} id={todos[selectedDay].indexOf(todo)} todo={todo} readonly={readonly} edit={editTodo} delete={deleteTodo}/>) : <Typography variant={readonly ? \"h6\" : \"h3\"} sx={{ paddingLeft: 2, marginTop: 5 }}>없음</Typography>}\n\n                <Typography sx={{ marginTop: 3 }}>\n                    {readonly ? 'readonly' : 'edit'}\n                </Typography>\n            </Paper >\n        )\n    }\n\n    export default Todos\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\n\nconst Notice = () => \n        (<Paper sx={{padding: 5}}>\n            <Link href=\"https://www.convertcsv.com/json-to-csv.htm\">\n                {'JSON 파일을 csv, excel 파일로 바꿔주는 사이트'}\n            </Link>\n            <p>를 이용하여 텍스트로 저장하기 한 파일을 엑셀처럼 만들 수 있습니다.</p>\n            <p>전체일지 삭제하기를 한 뒤 저장해야 결과물이 반영됩니다. <br/>전체일지 삭제하기 한 뒤 새로고침하면 실행했던 결과를 취소할 수 있습니다.</p>\n        </Paper>\n    )\n\nexport default Notice\n","import React, { useState } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\n\nconst RecordWork = (props) => {\n    const list = props.data.people;\n    const workRecord = props.data.workRecord;\n    const setPeople = props.data.setPeople;\n    const date = props.data.date;\n\n    const [wHours, setWHours] = useState(0);\n    const [personName, setPersonName] = useState([]);\n\n    const theme = useTheme();\n\n    const ITEM_HEIGHT = 48;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: 250,\n            },\n        },\n    };\n\n    function getStyles(name, personName, theme) {\n        return {\n            fontWeight:\n                personName.indexOf(name) === -1\n                    ? theme.typography.fontWeightRegular\n                    : theme.typography.fontWeightMedium,\n        };\n    }\n\n    const handleChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setPersonName(\n            typeof value === 'string' ? value.split(',') : value,\n        );\n    };\n\n\n    return (\n        <Paper sx={{\n            height: '80vh',\n            padding: '20px',\n            overflow: 'scroll'\n        }}>\n            <Typography variant=\"h2\">\n                일한 시간 기록하기\n            </Typography>\n            <Box\n                component=\"form\"\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'space-around',\n                    margin: 2,\n                    width: '100%'\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n                <Select\n                    label=\"직원명\"\n                    multiple\n                    value={personName}\n                    onChange={handleChange}\n                    input={<OutlinedInput sx={{width: '90%'}} label=\"Name\" />}\n                    MenuProps={MenuProps}\n                    xs={{flex: '0.8'}}\n                >\n                    {list.map((pInfo) => (\n                        <MenuItem\n                            key={pInfo.name}\n                            value={pInfo.name}\n                            xs={getStyles(pInfo.name, personName, theme)}\n                        >\n                            {pInfo.name}\n                        </MenuItem>\n                    ))}\n                </Select>\n\n                <TextField xs={{ flex: '0.5' }}>\n                    시간 숫자만\n                </TextField>\n            </Box>\n        </Paper>\n    )\n}\n\nexport default RecordWork\n","import React, {useEffect, useState} from 'react';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiDrawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport DateViewer from './DateViewer';\nimport { secondaryListItems, mainListItems } from './ListItems'\nimport People from './People';\nimport Calculator from './Calculator';\nimport Todos from './Todos';\nimport Notice from './Notice';\nimport RecordWork from './RecordWork';\nimport { saveAs } from 'file-saver'\n\nfunction Footer(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Simple Workbook Application for You, Last updated: 2021-09-01'}\n        </Typography>\n    );\n}\n\nconst drawerWidth = 240;\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n    backgroundColor: theme.primary\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        '& .MuiDrawer-paper': {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            boxSizing: 'border-box',\n            ...(!open && {\n                overflowX: 'hidden',\n                transition: theme.transitions.create('width', {\n                    easing: theme.transitions.easing.sharp,\n                    duration: theme.transitions.duration.leavingScreen,\n                }),\n                width: theme.spacing(7),\n                [theme.breakpoints.up('sm')]: {\n                    width: theme.spacing(9),\n                },\n            }),\n        },\n    }),\n);\n\nconst MainDashboard = (date, setDate, data, peopleData) => (\n\n    <Grid container spacing={3}>\n        {/* DatePicker */}\n        <Grid item xs={12} md={6} lg={6} >\n            <DateViewer date={{ val: date, dispatch: setDate }} />\n        </Grid>\n        {/* Todos */}\n        <Grid item xs={12} md={6} lg={6}>\n            <Todos data={data} readonly={true} />\n            <People data={peopleData} readonly={true}/>\n        </Grid>\n    </Grid>)\n\nconst DashboardContent = () => {\n    const [open, setOpen] = useState(true);\n    const toggleDrawer = () => {\n        setOpen(!open);\n    };\n    const [date, setDate] = useState(new Date())\n    const [notifiCount, setNotifiCount] = useState(1)\n    const [pageState, setPageState] = useState('dashboard')\n    const [todos, setTodos] = useState(() => {\n        const saved = localStorage.getItem(\"swayTodos\");\n        const initialValue = JSON.parse(saved);\n        return initialValue || {};\n    });\n    const [people, setPeople] = useState(() => {\n        const saved = localStorage.getItem(\"swayPeople\");\n        const initialValue = JSON.parse(saved);\n        return initialValue || {list: [], workRecord: {}};\n    });\n\n\n    const saveData = () => {\n        window.localStorage.setItem(\"swayTodos\", JSON.stringify(todos));\n    };\n\n    const loadData = () => {\n        const input = document.createElement('input');\n        const handleFiles = () => {\n            const file = input.files[0]; /* now you can work with the file list */\n            console.log(file)\n            const fr = new FileReader();\n            fr.addEventListener(\"load\", e => {\n                const filecontent = JSON.parse(fr.result);\n                setTodos(filecontent)\n                input.parentElement?.removeChild(input);\n            });\n            fr.readAsText(file);\n        }\n        input.type = 'file'\n        input.addEventListener(\"change\", handleFiles, false);\n        input.click()\n    };\n\n    const deleteData = () => {\n        setTodos({});\n    }\n\n    const exportData = () => {\n        const data = JSON.stringify(todos)\n        console.log(data)\n        const file = new File([data], `sway-todos-${new Date().getTime()}.json`);\n        saveAs(file);\n    }\n\n    const savePeopleData = () => {\n        window.localStorage.setItem(\"swayPeople\", JSON.stringify(people));\n    }\n\n    const exportPeopleData = () => {\n        const data = JSON.stringify(people)\n        console.log(data)\n        const file = new File([data], `sway-people-${new Date().getTime()}.json`);\n        saveAs(file);\n    }\n\n    const loadPeopleData = () => {\n        const input = document.createElement('input');\n        const handleFiles = () => {\n            const file = input.files[0]; /* now you can work with the file list */\n            console.log(file)\n            const fr = new FileReader();\n            fr.addEventListener(\"load\", e => {\n                const filecontent = JSON.parse(fr.result);\n                setPeople(filecontent)\n                input.parentElement?.removeChild(input);\n            });\n            fr.readAsText(file);\n        }\n        input.type = 'file'\n        input.addEventListener(\"change\", handleFiles, false);\n        input.click()\n    };\n\n    const dataRel = {\n        todos,\n        setTodos: setTodos,\n        upload: loadData,\n        delete: deleteData,\n        export: exportData,\n        date,\n        setDate\n    }\n\n    const peopleDataRel = {\n        people: people.list,\n        workRecord: people.workRecord,\n        setPeople,\n        date,\n        export: exportPeopleData,\n        upload: loadPeopleData\n    }\n\n    useEffect(() => {\n        saveData()\n    }, [todos])\n\n    useEffect(() => {\n        savePeopleData()\n    }, [people])\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n\n            <AppBar position=\"absolute\" open={open}>\n                <Toolbar\n                    sx={{\n                        pr: '24px', // keep right padding when drawer closed\n                    }}\n                >\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={toggleDrawer}\n                        sx={{\n                            marginRight: '36px',\n                            ...(open && { display: 'none' }),\n                        }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        noWrap\n                        sx={{ flexGrow: 1 }}\n                    >\n                        SWAY\n                    </Typography>\n                    <IconButton color=\"inherit\" onClick={() => { alert('장식입니다!'); setNotifiCount(0) }}>\n                        <Badge badgeContent={notifiCount} color=\"secondary\" >\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer variant=\"permanent\" open={open}>\n                <Toolbar\n                    sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end',\n                        px: [1],\n                    }}\n                >\n                    <IconButton onClick={toggleDrawer}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </Toolbar>\n                <Divider />\n                <List> {mainListItems(setPageState)}</List>\n                <Divider />\n                <List> {secondaryListItems(dataRel, peopleDataRel)}</List>\n            </Drawer>\n            <Box\n                component=\"main\"\n                sx={{\n                    backgroundColor: (theme) =>\n                        theme.palette.mode === 'light'\n                            ? theme.palette.grey[100]\n                            : theme.palette.grey[900],\n                    flexGrow: 1,\n                    height: '100vh',\n                    overflow: 'auto',\n                }}\n            >\n                <Toolbar />\n                <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n                    {pageState === 'dashboard' ? MainDashboard(date, setDate, dataRel, peopleDataRel) : pageState === 'people' ? <People data={peopleDataRel} readonly={false}/> : pageState === 'calculator' ? <Calculator /> : pageState === 'todos' ? <Todos data={dataRel} readonly={false} /> \n                    : pageState === 'notice' ? <Notice /> \n                    : pageState === 'addem' ? <RecordWork data={peopleDataRel}/> :'Nothing ever happens'}\n                    <Footer sx={{ pt: 4 }} />\n                </Container>\n            </Box>\n        </Box>\n    );\n}\n\nexport default DashboardContent","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport CalculateIcon from '@material-ui/icons/Calculate';\nimport SaveIcon from '@material-ui/icons/Save';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\nimport Assignment from '@material-ui/icons/Assignment';\nimport Delete from '@material-ui/icons/Delete';\nimport UploadFile from '@material-ui/icons/UploadFile';\nimport Recommend from '@material-ui/icons/Recommend';\n\nexport const mainListItems = (dispatch) => (\n  <div>\n    <ListItem button onClick={(e) => {e.preventDefault();dispatch('dashboard')}}>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"대시보드\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('people')}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"작원관리\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('addem')}>\n      <ListItemIcon>\n        <Recommend />\n      </ListItemIcon>\n      <ListItemText primary=\"일한 시간 기록\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('calculator')}>\n      <ListItemIcon>\n        <CalculateIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"임금계산기\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('todos')}>\n      <ListItemIcon>\n        <AssignmentInd />\n      </ListItemIcon>\n      <ListItemText primary=\"업무일지\" />\n    </ListItem>\n    <ListItem button onClick={() => dispatch('notice')}>\n      <ListItemIcon>\n        <Assignment/>\n      </ListItemIcon>\n      <ListItemText primary=\"안내\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (data, peopleData) => (\n  <div>\n    <ListSubheader inset>자동 저장은 위험합니다!</ListSubheader>\n\n    <ListItem button onClick={() => data.delete()}>\n      <ListItemIcon>\n        <Delete />\n      </ListItemIcon>\n      <ListItemText primary=\"전체일지 삭제하기\" sx={{color: '#ff1744'}}/>\n    </ListItem>\n\n    <ListItem button onClick={() => data.upload()}>\n      <ListItemIcon>\n        <UploadFile />\n      </ListItemIcon>\n      <ListItemText primary=\"업무일지 파일 불러오기\"/>\n    </ListItem>\n\n    <ListItem button onClick={() => data.export()}>\n      <ListItemIcon>\n        <SaveAltIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"업무일지 파일 저장하기\"/>\n    </ListItem>\n\n    <ListItem button onClick={() => peopleData.upload()}>\n      <ListItemIcon>\n        <UploadFile />\n      </ListItemIcon>\n      <ListItemText primary=\"직원기록 파일 불러오기\"/>\n    </ListItem>\n\n    <ListItem button onClick={() => peopleData.export()}>\n      <ListItemIcon>\n        <SaveAltIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"직원기록 파일 저장하기\"/>\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport Dashboard from './components/Dashboard';\n\nexport default function App() {\n  return (\n      <div>\n\n        <Dashboard/>\n      </div>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#66023C',\n    },\n    secondary: {\n      main: '#DFAFDF',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}